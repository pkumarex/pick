// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/cnskcprotobuf/cnskcprotobuf.proto

package cnskcprotobuf_proto

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SessionRequest) Validate() error {
	return nil
}
func (this *SessionID) Validate() error {
	return nil
}
func (this *AttestationID) Validate() error {
	return nil
}

var _regex_SessionResponse_PublicKey = regexp.MustCompile(`^[a-zA-Z0-9=]{5,1000}$`)

func (this *SessionResponse) Validate() error {
	if !(this.Result > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Result", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Result))
	}
	if !(this.Result < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("Result", fmt.Errorf(`value '%v' must be less than '100'`, this.Result))
	}
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	if !_regex_SessionResponse_PublicKey.MatchString(this.PublicKey) {
		return github_com_mwitkow_go_proto_validators.FieldError("PublicKey", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9=]{5,1000}$"`, this.PublicKey))
	}
	return nil
}
func (this *CloseSessionResponse) Validate() error {
	if !(this.Result > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Result", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Result))
	}
	if !(this.Result < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("Result", fmt.Errorf(`value '%v' must be less than '100'`, this.Result))
	}
	return nil
}

var _regex_KeyInformation_KBSURL = regexp.MustCompile(`(http|https):\/\/([\w_-]+(?:(?:\.[\w_-]+)+))([\w.,@?^=%&:\/~+#-]*[\w@?^=%&\/~+#-])`)
var _regex_KeyInformation_AASToken = regexp.MustCompile(`^[a-zA-Z0-9=-_+/]`)
var _regex_KeyInformation_CMSRootCA = regexp.MustCompile(`^[a-zA-Z0-9=-_+/]`)

func (this *KeyInformation) Validate() error {
	if !_regex_KeyInformation_KBSURL.MatchString(this.KBSURL) {
		return github_com_mwitkow_go_proto_validators.FieldError("KBSURL", fmt.Errorf(`value '%v' must be a string conforming to regex "(http|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])"`, this.KBSURL))
	}
	if !_regex_KeyInformation_AASToken.MatchString(this.AASToken) {
		return github_com_mwitkow_go_proto_validators.FieldError("AASToken", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9=-_+/]"`, this.AASToken))
	}
	if !_regex_KeyInformation_CMSRootCA.MatchString(this.CMSRootCA) {
		return github_com_mwitkow_go_proto_validators.FieldError("CMSRootCA", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9=-_+/]"`, this.CMSRootCA))
	}
	return nil
}
func (this *KeyIDRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	if nil == this.KeyInfo {
		return github_com_mwitkow_go_proto_validators.FieldError("KeyInfo", fmt.Errorf("message must exist"))
	}
	if this.KeyInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.KeyInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("KeyInfo", err)
		}
	}
	return nil
}
func (this *CipherResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *GcmRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *GcmResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *NonceSizeRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *NonceSizeResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *SealRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *SealResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *DecryptRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *DecryptResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *HmacRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *HmacResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *WriteHmacRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *WriteHmacResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
func (this *SumHmacRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	return nil
}
func (this *SumHmacResponse) Validate() error {
	if !(this.ErrorStatus > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be greater than '-1'`, this.ErrorStatus))
	}
	if !(this.ErrorStatus < 100) {
		return github_com_mwitkow_go_proto_validators.FieldError("ErrorStatus", fmt.Errorf(`value '%v' must be less than '100'`, this.ErrorStatus))
	}
	if nil == this.AttestationId {
		return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", fmt.Errorf("message must exist"))
	}
	if this.AttestationId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AttestationId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AttestationId", err)
		}
	}
	return nil
}
